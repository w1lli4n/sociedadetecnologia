@page "/artigos/{name}"
@inject HttpClient Http
@using SociedadeTecnologia.Components
@using SociedadeTecnologia.Models

@if(@Article is null)
{
    <h1>404 - Página não encontrada</h1>
}
else
{
    <MudContainer MaxWidth="MaxWidth.Medium">
        <MudImage Src=@Article.ImagePath Fluid="true" />
    </MudContainer>
    <MudText Typo="Typo.h4">
        @Article.Title
    </MudText>
    <MudText Typo="Typo.h6">
        @Article.Lead
    </MudText>
    <div>@((MarkupString)Article.HtmlText)</div>
    <AuthorComponent Author=@Article.Author/>
}
    

@code
{
    [Parameter]
    public string? Name { get; set; }
    private Article? Article { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var articles = await Http.GetFromJsonAsync<Article[]>("articles.json");

        if (articles != null)
        {
            foreach (var article in articles)
            {
                if (article.Path == Name)
                    Article = article;
            }
        }
            
    }
}